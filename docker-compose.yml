services:
  # Grafana - unified visualization
  grafana:
    image: grafana/grafana:latest
    container_name: cirislens-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=https://agents.ciris.ai/lens
      - GF_SERVER_DOMAIN=agents.ciris.ai
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_FEATURE_TOGGLES_ENABLE=traceToMetrics,traceToLogs,correlations,publicDashboards
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ID=1
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_BASIC_ENABLED=true
      # Disable editing for anonymous users
      - GF_USERS_VIEWERS_CAN_EDIT=false
      - GF_DISABLE_GRAVATAR=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_DISABLE_SIGNOUT_MENU=true
      # Hide edit UI elements
      - GF_EXPLORE_ENABLED=false
      # Tempo and Loki datasources are built-in now, no need to install
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./dashboards:/var/lib/grafana/dashboards:ro
      - ./plugins:/var/lib/grafana/plugins:ro
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cirislens

  # PostgreSQL database for CIRISLens data storage
  postgres:
    image: postgres:15-alpine
    container_name: cirislens-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=cirislens
      - POSTGRES_PASSWORD=cirislens
      - POSTGRES_DB=cirislens
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:5433:5432"  # Only expose to localhost
    networks:
      - cirislens
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cirislens"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CIRISLens API service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: cirislens-api:dev
    container_name: cirislens-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://cirislens:cirislens@postgres:5432/cirislens
    volumes:
      - ./api:/app:ro
      - ./config:/app/config:ro
      - ./sql:/app/sql:ro
    ports:
      - "8000:8000"
    networks:
      - cirislens
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "agents.ciris.ai:host-gateway"

volumes:
  grafana_data:
  postgres_data:

networks:
  cirislens:
    driver: bridge